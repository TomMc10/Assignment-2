<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LXoz54BQRAAAAABJRU5ErkJggg==
</value>
  </data>
</root>